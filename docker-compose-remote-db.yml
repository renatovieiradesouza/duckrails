version: '3.7'
services:
  mock_back:
    restart: on-failure
    image: iridakos/duckrails:release-v2.1.5
    privileged: true
    user: root
    ports:
      - 127.0.0.1:8080:80
    container_name: backend
    networks:
      - proxy
    environment:
      DATABASE_ADAPTER: postgresql
      DATABASE_PORT: 5432
      DATABASE_NAME: dbname
      DATABASE_HOSTNAME: hostname
      DATABASE_PASSWORD: password
      DATABASE_USERNAME: username
      SECRET_KEY_BASE: "61867f2ea52bfcd0956063c8947abd745968b9830387aba3034c3bfd2c63d2e22519d0b14df362f85bacd3d36029139a2e5ccb0a08bd2bd88f7ef353556dd7fa"

  mock_front:
    restart: on-failure
    image: iridakos/duckrails:release-v2.1.5
    privileged: true
    user: root
    ports:
      - 127.0.0.1:8181:80
    container_name: frontend
    networks:
      - proxy
    environment:
      DATABASE_ADAPTER: postgresql
      DATABASE_PORT: 5432
      DATABASE_NAME: dbname
      DATABASE_HOSTNAME: hostname
      DATABASE_PASSWORD: password
      DATABASE_USERNAME: username
      SECRET_KEY_BASE: "61867f2ea52bfcd0956063c8947abd745968b9830387aba3034c3bfd2c63d2e22519d0b14df362f85bacd3d36029139a2e5ccb0a08bd2bd88f7ef353556dd7fa"

  nginx:
   restart: on-failure
   depends_on:
     - mock_back
     - mock_front
   image: nginx:stable
   privileged: true
   user: root
   ports:
     - 80:80
   container_name: nginx
   volumes:
     - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf
   networks:
     - proxy

networks:
  proxy:
    driver: bridge
